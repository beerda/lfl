% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantifier.R
\name{quant}
\alias{quant}
\title{A low-level function for creation of quantifiers.}
\usage{
quant(measure, relative = TRUE, alg = c("lukasiewicz", "goedel", "goguen"))
}
\arguments{
\item{measure}{A non-decreasing function that assigns a truth value from the
\eqn{[0, 1]} interval to the either relative or absolute quantity}

\item{relative}{Whether the measure assumes relative or absolute quantity.
Relative quantity is always a number from the \eqn{[0,1]} interval}

\item{alg}{The underlying algebra must be either a string (one from 'lukasiewicz',
'goedel' or 'goguen') or an instance of the S3 class \code{\link[=algebra]{algebra()}}.}
}
\value{
A two-argument function, which expects two numeric vectors of equal length
(the vector elements are recycled to ensure equal lengths). The first argument, \code{x},
is a vector of membership degrees to be measured, the second argument, \code{w}, is
the vector of weights.

Let \eqn{U} be the set of input vector indices (1 to \code{length(x)}). Then the quantifier
computes the truth values accordingly to the following formula:
\eqn{\vee_{z \subseteq u} \wedge_{u \in U} (x[u] \wedge measure(sum(x[u] / sum(w[u]))))}

Setting \code{w} to 1 yields to operation of the <1> quantifier as developed by Dvořák et al.
To compute the <1,1> quantifier as developed by Dvořák et al., e.g. "almost all A are B", \code{w} must
be set again to 1 and \code{x} to the result of the implication \eqn{A \Rightarrow B}.
To compute the <1,1> quantifier as proposed by Murinová et al., e.g. "almost all A are B",
\code{x} must be set to the result of the implication \eqn{A \Rightarrow B} and \code{w} to the membership
degrees of \eqn{A}. See the examples below.
}
\description{
A quantifier is a function that computes a fuzzy truth value of a claim about
the quantity. This function creates the <1>-type quantifier.
}
\examples{
  # Dvorak <1> "almost all" quantifier
  q <- quant(lingexpr(ctx3(), atomic='bi', hedge='ex'))
  a <- c(0.9, 1, 1, 0.2, 1)
  q(x=a, w=1)

  # Dvorak <1,1> "almost all" quantifier
  a <- c(0.9, 1, 1, 0.2, 1)
  b <- c(0.2, 1, 0, 0.5, 0.8)
  q <- quant(lingexpr(ctx3(), atomic='bi', hedge='ex'))
  q(x=lukas.residuum(a, b), w=1)

  # Murinová <1,1> "almost all" quantifier
  a <- c(0.9, 1, 1, 0.2, 1)
  b <- c(0.2, 1, 0, 0.5, 0.8)
  q <- quant(lingexpr(ctx3(), atomic='bi', hedge='ex'))
  q(x=lukas.residuum(a, b), w=a)
}
\references{
Dvořák, A., Holčapek, M. L-fuzzy quantifiers of type <1> determined by fuzzy measures.
Fuzzy Sets and Systems vol.160, issue 23, 3425-3452, 2009.

Dvořák, A., Holčapek, M. Type <1,1> fuzzy quantifiers determined by fuzzy measures.
IEEE International Conference on Fuzzy Systems (FuzzIEEE), 2010.

Murinová, P., Novák, V. The theory of intermediate quantifiers in fuzzy natural logic
revisited and the model of "Many". Fuzzy Sets and Systems, vol 388, 2020.
}
\seealso{
\code{\link[=quantifier]{quantifier()}}, \code{\link[=lingexpr]{lingexpr()}}
}
\author{
Michal Burda
}
\keyword{models}
\keyword{robust}
