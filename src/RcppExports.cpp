// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// goedel_tnorm
double goedel_tnorm(NumericVector vals, LogicalVector naRm);
RcppExport SEXP _lfl_goedel_tnorm(SEXP valsSEXP, SEXP naRmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type naRm(naRmSEXP);
    rcpp_result_gen = Rcpp::wrap(goedel_tnorm(vals, naRm));
    return rcpp_result_gen;
END_RCPP
}
// lukas_tnorm
double lukas_tnorm(NumericVector vals, LogicalVector naRm);
RcppExport SEXP _lfl_lukas_tnorm(SEXP valsSEXP, SEXP naRmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type naRm(naRmSEXP);
    rcpp_result_gen = Rcpp::wrap(lukas_tnorm(vals, naRm));
    return rcpp_result_gen;
END_RCPP
}
// goguen_tnorm
double goguen_tnorm(NumericVector vals, LogicalVector naRm);
RcppExport SEXP _lfl_goguen_tnorm(SEXP valsSEXP, SEXP naRmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type naRm(naRmSEXP);
    rcpp_result_gen = Rcpp::wrap(goguen_tnorm(vals, naRm));
    return rcpp_result_gen;
END_RCPP
}
// goedel_tconorm
double goedel_tconorm(NumericVector vals, LogicalVector naRm);
RcppExport SEXP _lfl_goedel_tconorm(SEXP valsSEXP, SEXP naRmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type naRm(naRmSEXP);
    rcpp_result_gen = Rcpp::wrap(goedel_tconorm(vals, naRm));
    return rcpp_result_gen;
END_RCPP
}
// lukas_tconorm
double lukas_tconorm(NumericVector vals, LogicalVector naRm);
RcppExport SEXP _lfl_lukas_tconorm(SEXP valsSEXP, SEXP naRmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type naRm(naRmSEXP);
    rcpp_result_gen = Rcpp::wrap(lukas_tconorm(vals, naRm));
    return rcpp_result_gen;
END_RCPP
}
// goguen_tconorm
double goguen_tconorm(NumericVector vals, LogicalVector naRm);
RcppExport SEXP _lfl_goguen_tconorm(SEXP valsSEXP, SEXP naRmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type naRm(naRmSEXP);
    rcpp_result_gen = Rcpp::wrap(goguen_tconorm(vals, naRm));
    return rcpp_result_gen;
END_RCPP
}
// goedel_residuum
NumericVector goedel_residuum(NumericVector x, NumericVector y);
RcppExport SEXP _lfl_goedel_residuum(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(goedel_residuum(x, y));
    return rcpp_result_gen;
END_RCPP
}
// lukas_residuum
NumericVector lukas_residuum(NumericVector x, NumericVector y);
RcppExport SEXP _lfl_lukas_residuum(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(lukas_residuum(x, y));
    return rcpp_result_gen;
END_RCPP
}
// goguen_residuum
NumericVector goguen_residuum(NumericVector x, NumericVector y);
RcppExport SEXP _lfl_goguen_residuum(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(goguen_residuum(x, y));
    return rcpp_result_gen;
END_RCPP
}
// invol_neg
NumericVector invol_neg(NumericVector x);
RcppExport SEXP _lfl_invol_neg(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(invol_neg(x));
    return rcpp_result_gen;
END_RCPP
}
// strict_neg
NumericVector strict_neg(NumericVector x);
RcppExport SEXP _lfl_strict_neg(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(strict_neg(x));
    return rcpp_result_gen;
END_RCPP
}
// triangle
NumericVector triangle(NumericVector x, NumericVector ctx);
RcppExport SEXP _lfl_triangle(SEXP xSEXP, SEXP ctxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ctx(ctxSEXP);
    rcpp_result_gen = Rcpp::wrap(triangle(x, ctx));
    return rcpp_result_gen;
END_RCPP
}
// raisedcos
NumericVector raisedcos(NumericVector x, NumericVector ctx);
RcppExport SEXP _lfl_raisedcos(SEXP xSEXP, SEXP ctxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ctx(ctxSEXP);
    rcpp_result_gen = Rcpp::wrap(raisedcos(x, ctx));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lfl_goedel_tnorm", (DL_FUNC) &_lfl_goedel_tnorm, 2},
    {"_lfl_lukas_tnorm", (DL_FUNC) &_lfl_lukas_tnorm, 2},
    {"_lfl_goguen_tnorm", (DL_FUNC) &_lfl_goguen_tnorm, 2},
    {"_lfl_goedel_tconorm", (DL_FUNC) &_lfl_goedel_tconorm, 2},
    {"_lfl_lukas_tconorm", (DL_FUNC) &_lfl_lukas_tconorm, 2},
    {"_lfl_goguen_tconorm", (DL_FUNC) &_lfl_goguen_tconorm, 2},
    {"_lfl_goedel_residuum", (DL_FUNC) &_lfl_goedel_residuum, 2},
    {"_lfl_lukas_residuum", (DL_FUNC) &_lfl_lukas_residuum, 2},
    {"_lfl_goguen_residuum", (DL_FUNC) &_lfl_goguen_residuum, 2},
    {"_lfl_invol_neg", (DL_FUNC) &_lfl_invol_neg, 1},
    {"_lfl_strict_neg", (DL_FUNC) &_lfl_strict_neg, 1},
    {"_lfl_triangle", (DL_FUNC) &_lfl_triangle, 2},
    {"_lfl_raisedcos", (DL_FUNC) &_lfl_raisedcos, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_lfl(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
